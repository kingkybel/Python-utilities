
####################################################################
## gRPC - services
####################################################################

include(${CMAKE_SOURCE_DIR}/src/cmake/common.cmake)

set(PROTO_CPP_SRC_DIR ${CMAKE_SOURCE_DIR}/src/proto_cpp)
file(MAKE_DIRECTORY ${PROTO_CPP_SRC_DIR})

[[CMAKE_GENERATE_CPP_FROM_PROTOS]]

# Put all gRPC/proto functions into a library
add_library([[PROJECT_NAME_LOWER]]_grpc_proto STATIC ${PROTO_FILES_HEADERS} ${PROTO_FILES_SOURCES})
target_link_libraries([[PROJECT_NAME_LOWER]]_grpc_proto PRIVATE
  ${_REFLECTION}
  ${_GRPC_GRPCPP}
  ${_PROTOBUF_LIBPROTOBUF})

foreach(_target [[CMAKE_GRPC_SERVICES]])
  add_executable("${_target}_server" "${_target}_server_main.cc" "${_target}_service.cc")
  target_include_directories("${_target}_server" PUBLIC ${PROTO_CPP_SRC_DIR})
  target_link_libraries("${_target}_server"
    [[PROJECT_NAME_LOWER]]_grpc_proto
    absl::flags
    absl::flags_parse
    ${_REFLECTION}
    ${_GRPC_GRPCPP}
    ${_PROTOBUF_LIBPROTOBUF})

  add_executable("${_target}_client" "${_target}_client_main.cc" "${_target}_client.cc")
  target_include_directories("${_target}_client" PUBLIC ${PROTO_CPP_SRC_DIR})
  target_link_libraries("${_target}_client"
    [[PROJECT_NAME_LOWER]]_grpc_proto
    absl::flags
    absl::flags_parse
    ${_REFLECTION}
    ${_GRPC_GRPCPP}
    ${_PROTOBUF_LIBPROTOBUF})
endforeach()
